name: Appium CI
# on push we will trigger our code
on: [push]


jobs:
  build:
    runs-on: macos-latest # the machine type
    strategy: # we are using strategy if we need to run on parallel with different devices and version
      matrix:
        api-level: [25] #Google api level for example [25,23,28]
        target: [default]
    steps:
    - uses: actions/checkout@v2 #checkout the code
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install Appium Server
      run: |
        chmod +x ./scripts/InstallAppiumServer.sh # install and run appium server in the background
        ./scripts/InstallAppiumServer.sh
        brew install allure
    - name: Run Appium Tests
      continue-on-error: true
      uses: reactivecircus/android-emulator-runner@v2 # install and create the Emulator
      with:
        api-level: ${{ matrix.api-level }}
        target: ${{ matrix.target }}
        arch: x86_64
        profile: Nexus 6
        emulator-options: -dns-server 8.8.8.8 -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
        script: ./gradlew test --info # running our test with info to check the results
    - name: üìä Step 5 - Collect Allure files and generate allure-report folder
      run: |
        allure generate allure-results/
    - name: üéÅ Step 6 - Publishing Allure artifact to GitHub Actions
      uses: actions/upload-artifact@v2
      with:
        name: allure-report
        path: allure-report
